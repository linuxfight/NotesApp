// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotesApp_EF.Data;

#nullable disable

namespace ASP_EF.Migrations
{
    [DbContext(typeof(NotesContext))]
    [Migration("20231230181431_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("ASP_EF.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("ASP_EF.Models.NoteAdd", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NotesAdd");
                });

            modelBuilder.Entity("ASP_EF.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ASP_EF.Models.TagNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdNote")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTag")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdNote");

                    b.HasIndex("IdTag");

                    b.ToTable("TagsNotes");
                });

            modelBuilder.Entity("ASP_EF.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ASP_EF.Models.Note", b =>
                {
                    b.HasOne("ASP_EF.Models.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASP_EF.Models.NoteAdd", b =>
                {
                    b.HasOne("ASP_EF.Models.Note", "Note")
                        .WithOne("NoteAdd")
                        .HasForeignKey("ASP_EF.Models.NoteAdd", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Note");
                });

            modelBuilder.Entity("ASP_EF.Models.TagNote", b =>
                {
                    b.HasOne("ASP_EF.Models.Note", "Note")
                        .WithMany("TagsNotes")
                        .HasForeignKey("IdNote")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASP_EF.Models.Tag", "Tag")
                        .WithMany("TagsNotes")
                        .HasForeignKey("IdTag")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Note");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ASP_EF.Models.Note", b =>
                {
                    b.Navigation("NoteAdd")
                        .IsRequired();

                    b.Navigation("TagsNotes");
                });

            modelBuilder.Entity("ASP_EF.Models.Tag", b =>
                {
                    b.Navigation("TagsNotes");
                });

            modelBuilder.Entity("ASP_EF.Models.User", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
